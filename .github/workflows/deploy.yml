name: Deploy to AWS
on:
    push:
        branches: main
    pull_request:

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                node-version: '14'
            - name: Create .env file
              run: |
                touch .env
                echo VITE_MONGO_URL = 'mongodb+srv://${{ secrets.MONGODB_USER }}:${{ secrets.MONGODB_PASS }}@gokaddal.qicnveb.mongodb.net/${{ secrets.DB_NAME }}?retryWrites=true&w=majority&appName=${{ secrets.MONGODB_NAME }}' >> .env
                echo VITE_API_URL = ${{ secrets.BACKEND_API }} >> .env
                echo VITE_GOOGLE_MAP_API=${{ secrets.GOOGLE_MAP_API_KEY }} >> .env
                echo VITE_OPEN_WEATHER_API=${{ secrets.OPEN_WEATHER }} >> .env
                echo JWT_SECRET=${{secrets.JWT_SECRET}} >> .env
                echo EMAIL_USER=${{secrets.EMAIL_USER}} >> .env
                echo EMAIL_PASSWORD=${{secrets.EMAIL_PASSWORD}} >> .env
                echo SMTP_HOST= ${{secrets.SMTP_HOST}} >> .env
                echo SMTP_PORT=465 >> .env
                echo SMTP_SECURE=true >> .env
                cat .env
                cp .env ./Backend
                cp .env ./Frontend
                ls Backend
                ls Frontend
            - name: Build
              run: |
                npm install
            - uses: aws-actions/configure-aws-credentials@v4
              name: Configure aws credentials
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: 'us-east-1'
            - name: Login to AWS ECR
              run: |
               aws ecr get-login-password --region us-east-1 | docker login --username ${{ secrets.ECR_USER }} --password-stdin ${{ secrets.ECR_PASS }}
            - name: Build Docker Image
              run: |  
                docker build -t roadstat .
            - name: Push Docker Image
              if: github.ref == 'refs/heads/main'
              run: |
                docker tag roadstat:latest ${{ secrets.ECR_PASS }}/${{ secrets.ECR_REPO }}:latest
                docker push ${{ secrets.ECR_PASS }}/${{ secrets.ECR_REPO }}:latest
            - name: Deploy to AWS ECS
              if: github.ref == 'refs/heads/main'
              run: |
                aws ecs update-service --cluster ${{ secrets.ROADSTAT_CLUSTER_NAME }} --service ${{ secrets.ROADSTAT_SERVICE_NAME }} --force-new-deployment

